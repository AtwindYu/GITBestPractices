{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","title":"git - 简明指南","structure":"mind_right","leftChildren":[],"root":true,"theme":"jianbihua","link":{"title":"","value":"http://rogerdudler.github.io/git-guide/index.zh.html","type":"url"},"children":[{"id":"74da269248f0","title":"动起来","children":[{"id":"429ac08c9bb7","title":"安装","parent":"74da269248f0","children":[{"id":"23ca4971a5fc","title":"下载 git OSX 版","link":{"title":"","value":"http://git-scm.com/download/mac","type":"url"},"parent":"429ac08c9bb7","children":[]},{"id":"e0134bb832d3","title":"下载 git Windows 版","link":{"title":"","value":"http://git-for-windows.github.io/","type":"url"},"parent":"429ac08c9bb7","children":[]},{"id":"4b35f31ca766","title":"下载 git Linux 版","link":{"title":"","value":"http://book.git-scm.com/2_installing_git.html","type":"url"},"parent":"429ac08c9bb7","children":[]}]},{"id":"a48a161e540a","title":"创建新仓库","children":[{"id":"80f4c64293cd","title":"创建新文件夹，打开，然后执行 ","children":[],"parent":"a48a161e540a"},{"id":"f08f385311ea","title":"git init","style":{"background-color":"#ccffcc"},"children":[],"parent":"a48a161e540a"},{"id":"4d56d13ce7eb","title":"以创建新的 git 仓库。","children":[],"parent":"a48a161e540a"}],"parent":"74da269248f0"},{"id":"d383b25a650b","title":"检出仓库","parent":"74da269248f0","children":[{"id":"86627db37a1c","title":"执行如下命令以创建一个本地仓库的克隆版本：","parent":"d383b25a650b","children":[{"id":"b885b2625149","title":"git clone /path/to/repository ","style":{"background-color":"#ccffcc"},"parent":"86627db37a1c","children":[]}]},{"id":"e48a3fac27a7","title":"如果是远端服务器上的仓库，你的命令会是这个样子：","parent":"d383b25a650b","children":[{"id":"2b9aac960aca","title":"git clone username@host:/path/to/repository","style":{"background-color":"#ccffcc"},"parent":"e48a3fac27a7","children":[]}]}]},{"id":"2158de59ae71","title":"工作流","children":[{"id":"dacb63b4128f","title":"你的本地仓库由 git 维护的三棵“树”组成","children":[{"id":"ff2c9612e9ba","title":"工作目录","children":[{"id":"e0d504251b6d","title":"它持有实际文件","children":[],"parent":"ff2c9612e9ba"}],"parent":"dacb63b4128f"},{"id":"dc8270ff132d","title":"暂存区（Index）","children":[{"id":"c1fd3904e0e6","title":"它像个缓存区域，临时保存你的改动","children":[],"parent":"dc8270ff132d"}],"parent":"dacb63b4128f"},{"id":"3d17ce68eefd","title":"HEAD","children":[{"id":"bdd1f859908a","title":"它指向你最后一次提交的结果","children":[],"parent":"3d17ce68eefd"}],"parent":"dacb63b4128f"},{"id":"0cac9b7402ea","title":"图示","children":[{"id":"a1aa11b468c5","title":"","image":{"w":802,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a796daee4b0615ac04e5cf8?e=1517910975&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:NpbapC-m-mlRSwoE7tsaDAZyejc=","h":358},"children":[],"parent":"0cac9b7402ea"}],"parent":"dacb63b4128f","collapsed":true}],"parent":"2158de59ae71","collapsed":false}],"parent":"74da269248f0"},{"id":"b53b2c9729f0","title":"添加和提交","parent":"74da269248f0","children":[{"id":"4618adc1a8c8","title":"你可以提出更改（把它们添加到暂存区），使用如下命令：","parent":"b53b2c9729f0","children":[{"id":"d0020c47ef20","title":"git add &lt;filename&gt;<filename></filename>","style":{"background-color":"#ccffcc"},"parent":"4618adc1a8c8","children":[]},{"id":"9544b81c3be6","title":"git add *","style":{"background-color":"#ccffcc"},"parent":"4618adc1a8c8","children":[]}]},{"id":"678af4067268","title":"这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：","parent":"b53b2c9729f0","children":[{"id":"f7a726b4071a","title":"git commit -m \"代码提交信息\"","style":{"background-color":"#ccffcc"},"parent":"678af4067268","children":[]}]},{"id":"52db9fe9d24a","title":"现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。","parent":"b53b2c9729f0","children":[]}]},{"id":"a752e4476bac","title":"推送改动","children":[{"id":"3b4e900a54ea","title":"你的改动现在已经在本地仓库的 HEAD 中了。<br>执行如下命令以将这些改动提交到远端仓库：","children":[{"id":"b3288a0ff403","title":"git push origin master","style":{"background-color":"#ccffcc"},"children":[],"parent":"3b4e900a54ea"},{"id":"9a5fc293356d","title":"可以把 master 换成你想要推送的任何分支。 ","children":[],"parent":"3b4e900a54ea"}],"parent":"a752e4476bac"},{"id":"3a2bff2f7582","title":"如果你还没有克隆现有仓库，<br>并欲将你的仓库连接到某个远程服务器，<br>你可以使用如下命令添加：","children":[{"id":"ef38d09d17eb","title":"git remote add origin &lt;server&gt;&nbsp;<server></server>","style":{"background-color":"#ccffcc"},"children":[],"parent":"3a2bff2f7582"}],"parent":"a752e4476bac"},{"id":"5098a3a76084","title":"如此你就能够将你的改动推送到所添加的服务器上去了。","children":[],"parent":"a752e4476bac"}],"parent":"74da269248f0"}],"parent":"root","collapsed":false},{"id":"0dba92d5c3e1","title":"关于分支","parent":"root","children":[{"id":"9fc458409626","title":"分支","parent":"0dba92d5c3e1","children":[{"id":"cc4bd30ffc6d","title":"分支是用来将特性开发绝缘开来的。<br>在你创建仓库的时候，master 是“默认的”分支。<br>在其他分支上进行开发，完成后再将它们合并到主分支上。","parent":"9fc458409626","children":[{"id":"0fd84ff147f0","title":"","image":{"w":892,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a796fc1e4b0812a0f0931a4?e=1517911505&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:OweMMc2I4M3ITsK7nHN_S4bP3lw=","h":318},"children":[],"parent":"cc4bd30ffc6d"}],"collapsed":true},{"id":"6e2b87e56e43","title":"创建一个叫做“feature_x”的分支，并切换过去：","children":[{"id":"db2e389a630e","title":"git checkout -b feature_x","style":{"background-color":"#ccffcc"},"children":[],"parent":"6e2b87e56e43"}],"parent":"9fc458409626"},{"id":"c517fded6951","title":"切换回主分支：","children":[{"id":"87b6e04ce241","title":"git checkout master","style":{"background-color":"#ccffcc"},"children":[],"parent":"c517fded6951"}],"parent":"9fc458409626"},{"id":"c1601fc16c09","title":"再把新建的分支删掉","children":[{"id":"d8627249a420","title":"git branch -d feature_x","style":{"background-color":"#ccffcc"},"children":[],"parent":"c1601fc16c09"}],"parent":"9fc458409626"},{"id":"24b16e43638c","title":"除非你将分支推送到远端仓库，<br>不然该分支就是 不为他人所见的：","children":[{"id":"7a139e3161ff","title":"git push origin &lt;branch&gt;&nbsp;<branch></branch>","style":{"background-color":"#ccffcc"},"children":[],"parent":"24b16e43638c"}],"parent":"9fc458409626"}]},{"id":"2acb5412e20d","title":"更新与合并","style":{"background-color":"#ff99cc"},"children":[{"id":"11e45b0319a5","title":"要更新你的本地仓库至最新改动，执行：","children":[{"id":"06c7110de009","title":"git pull","style":{"background-color":"#ccffcc"},"children":[],"parent":"11e45b0319a5"}],"parent":"2acb5412e20d"},{"id":"0e402be93f8d","title":"三种合并方式","parent":"2acb5412e20d","children":[{"id":"d87ae6eaeb6d","title":"快速合并","children":[{"id":"399904e2e809","title":"fast-forward方式就是当条件允许的时候，git直接把HEAD指针指向合并分支的头，完成合并。<br>属于“快进方式”，不过这种情况如果删除分支，则会丢失分支信息。因为在这个过程中没有创建commit","children":[],"parent":"d87ae6eaeb6d"},{"id":"e57a85a24bcc","title":"以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。<br>要合并其他分支到你的当前分支（例如 master），执行：","parent":"d87ae6eaeb6d","children":[{"id":"e3ab32c9c219","title":"git merge &lt;branch&gt;&nbsp;<branch></branch>","style":{"background-color":"#ccffcc"},"parent":"e57a85a24bcc","children":[]},{"id":"effbaed34d81","title":"这种合并(快速合并)，分支中的commit都会被合并过来","parent":"e57a85a24bcc","children":[]},{"id":"c2afecb86d96","title":"Git执行\"快进式合并\"（fast-farward merge），会直接将Master分支指向Develop分支","children":[{"id":"c2fdb26dd1e5","title":"","image":{"w":151,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a693fe4b059c41ab91249?e=1517975375&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:NXdxAxbgAyoFRlKBSORZ2RCvBu8=","h":183},"children":[],"parent":"c2afecb86d96"}],"parent":"e57a85a24bcc","collapsed":true}]}],"parent":"0e402be93f8d","icons":[{"text":"&#xe6c6","index":"11","name":"face"}]},{"id":"dbe2f4e38700","title":"压缩提交 --squash","parent":"0e402be93f8d","children":[{"id":"a175f8e467f3","title":"git checkout master\n<br>git merge --squash bugfix\n<br>git commit","style":{"background-color":"#ccffcc"},"parent":"dbe2f4e38700","children":[{"id":"76f930ab387f","title":"这个提交会忽略bugfix&nbsp;里的commit","children":[],"parent":"a175f8e467f3"}]},{"id":"455f93327bd7","title":"git merge --squash 是用来把一些不必要commit进行压缩，<br>比如说，你的feature在开发的时候写的commit很乱，<br>那么我们合并的时候不希望把这些历史commit带过来，于是使用--squash进行合并，<br>此时文件已经同合并后一样了，但不移动HEAD，不提交。<br>需要进行一次额外的commit来“总结”一下，然后完成最终的合并。","children":[],"parent":"dbe2f4e38700"},{"id":"a71fe9badfc7","title":"使用squash方式合并，把多次分支commit历史压缩为一次","parent":"dbe2f4e38700","children":[]}],"icons":[{"text":"&#xe693","index":"52","name":""}]},{"id":"3ec3cb2b50c2","title":"git的正常合并 --no-ff","style":{"background-color":"#ff99cc"},"children":[{"id":"a6babd401445","title":"使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。","style":{"background-color":"#7dcdc2"},"children":[{"id":"fcb532c6b092","title":"","image":{"w":80,"h":232,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a696ae4b059c41ab912df?e=1517975418&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:p3ci-XyOcf-8CpUyExMZ9d9SLmQ="},"children":[],"parent":"a6babd401445"}],"parent":"3ec3cb2b50c2","collapsed":true},{"id":"2449b83ea54b","title":"# 切换到Master分支<br>git checkout master<br><br># 对Develop分支进行合并<br>git merge --no-ff develop","style":{"background-color":"#ff99cc"},"parent":"3ec3cb2b50c2","children":[],"icons":[]},{"id":"5341706c0fea","title":"--no-ff指的是强行关闭fast-forward方式。","children":[],"parent":"3ec3cb2b50c2"},{"id":"d11c987650c0","title":"不使用fast-forward方式合并，保留分支的commit历史","parent":"3ec3cb2b50c2","children":[]}],"parent":"0e402be93f8d","icons":[{"text":"&#xe693","index":"57","name":""},{"text":"&#xe693","index":"38","name":""}]},{"id":"2358c7ef36e4","title":"图","parent":"0e402be93f8d","children":[{"id":"53af2027e69b","title":"","parent":"2358c7ef36e4","children":[],"image":{"w":547,"h":289,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a6fbde4b0615ac04f718c?e=1517977038&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:MOmGtclJAafHKmmvKGewbWKaOCM="}}],"collapsed":true}],"icons":[{"text":"&#xe693","index":"46","name":""}]},{"id":"bd75f2fcdaf3","title":"在这两种情况下，git 都会尝试去自动合并改动。<br>遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。<br>&nbsp;这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。<br>改完之后，你需要执行如下命令以将它们标记为合并成功：","children":[{"id":"a499e16ddc12","title":"git add &lt;filename&gt;&nbsp;<filename></filename>","style":{"background-color":"#ccffcc"},"children":[],"parent":"bd75f2fcdaf3"}],"parent":"2acb5412e20d"},{"id":"fd0ad714393b","title":"在合并改动之前，你可以使用如下命令预览差异：","children":[{"id":"378b794298ee","title":"git diff &lt;source_branch&gt; &lt;target_branch&gt;","style":{"background-color":"#ccffcc"},"children":[],"parent":"fd0ad714393b"}],"parent":"2acb5412e20d"}],"parent":"0dba92d5c3e1","icons":[{"text":"&#xe693","index":"46","name":""}]},{"id":"1b7546dcf27b","title":"标签","children":[{"id":"12089e471131","title":"为软件发布创建标签是推荐的。<br>这个概念早已存在，在 SVN 中也有。<br>你可以执行如下命令创建一个叫做 1.0.0 的标签：","children":[{"id":"239e32886a16","title":"git tag 1.0.0 1b2e1d63ff","style":{"background-color":"#ccffcc"},"children":[],"parent":"12089e471131"}],"parent":"1b7546dcf27b"},{"id":"d14f8d264664","title":"1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。<br>可以使用下列命令获取提交 ID：","children":[{"id":"116312e6c524","title":"git log","style":{"background-color":"#ccffcc"},"children":[],"parent":"d14f8d264664"}],"parent":"1b7546dcf27b"},{"id":"cede057acfe2","title":"你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。","children":[],"parent":"1b7546dcf27b"}],"parent":"0dba92d5c3e1","collapsed":true},{"id":"758548832a1c","title":"log","children":[{"id":"d9aab160e6c4","title":"如果你想了解本地仓库的历史记录，最简单的命令就是使用: ","children":[{"id":"6bb61ba1cd31","title":"git log","style":{"background-color":"#ccffcc"},"children":[],"parent":"d9aab160e6c4"}],"parent":"758548832a1c"},{"id":"ff2967b4714b","title":"你可以添加一些参数来修改他的输出，从而得到自己想要的结果。 <br>只看某一个人的提交记录:","children":[{"id":"714058af527d","title":"git log --author=bob","style":{"background-color":"#ccffcc"},"children":[],"parent":"ff2967b4714b"}],"parent":"758548832a1c"},{"id":"f93baaf6c732","title":"一个压缩后的每一条提交记录只占一行的输出:","children":[{"id":"e7175ac9f36a","title":"git log --pretty=oneline","style":{"background-color":"#ccffcc"},"children":[],"parent":"f93baaf6c732"}],"parent":"758548832a1c"},{"id":"5fb88ab6d8fe","title":"或者你想通过 ASCII 艺术的树形结构来展示所有的分支, <br>每个分支都标示了他的名字和标签: ","children":[{"id":"283aa62b5d5e","title":"git log --graph --oneline --decorate --all","style":{"background-color":"#ccffcc"},"children":[],"parent":"5fb88ab6d8fe"}],"parent":"758548832a1c"},{"id":"7a869167bfd2","title":"看看哪些文件改变了: ","children":[{"id":"308417bd4078","title":"git log --name-status","style":{"background-color":"#ccffcc"},"children":[],"parent":"7a869167bfd2"}],"parent":"758548832a1c"},{"id":"0eca3a35fc11","title":"这些只是你可以使用的参数中很小的一部分。更多的信息，参考：","children":[{"id":"36664c5b6260","title":"git log --help","style":{"background-color":"#ccffcc"},"children":[],"parent":"0eca3a35fc11"}],"parent":"758548832a1c"}],"parent":"0dba92d5c3e1","collapsed":true},{"id":"a703071ccbd6","title":"替换本地改动","children":[{"id":"f04e0ce020a4","title":"假如你操作失误（当然，这最好永远不要发生），<br>你可以使用如下命令替换掉本地改动：","children":[{"id":"4d85b1de5e80","title":"git checkout -- &lt;filename&gt;<filename></filename>","style":{"background-color":"#ccffcc"},"children":[],"parent":"f04e0ce020a4"},{"id":"373f8076f6b2","title":"此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。<br>已添加到暂存区的改动以及新文件都不会受到影响。","children":[],"parent":"f04e0ce020a4"}],"parent":"a703071ccbd6"},{"id":"9d3f45d6954c","title":"假如你想丢弃你在本地的所有改动与提交，<br>可以到服务器上获取最新的版本历史，<br>并将你本地主分支指向它：","children":[{"id":"f2c82a7f7a85","title":"git fetch origin","style":{"background-color":"#ccffcc"},"children":[],"parent":"9d3f45d6954c"},{"id":"3e32b9634739","title":"git reset --hard origin/master","style":{"background-color":"#ccffcc"},"children":[],"parent":"9d3f45d6954c"}],"parent":"a703071ccbd6"}],"parent":"0dba92d5c3e1","collapsed":true}]},{"id":"4357b8744f1c","title":"实用小贴士","children":[{"id":"cea459783afb","title":"内建的图形化 git：","children":[{"id":"cabcb6962d89","title":"gitk","style":{"background-color":"#ccffcc"},"children":[],"parent":"cea459783afb"}],"parent":"4357b8744f1c"},{"id":"6bf62f2e5c7f","title":"彩色的 git 输出：","children":[{"id":"aeafc9858eac","title":"git config color.ui true","style":{"background-color":"#ccffcc"},"children":[],"parent":"6bf62f2e5c7f"}],"parent":"4357b8744f1c"},{"id":"b8e961fa88f1","title":"显示历史记录时，每个提交的信息只显示一行：","children":[{"id":"4621e55b3457","title":"git config format.pretty oneline","style":{"background-color":"#ccffcc"},"children":[],"parent":"b8e961fa88f1"}],"parent":"4357b8744f1c"},{"id":"1481d6b351fc","title":"交互式添加文件到暂存区：","children":[{"id":"1379c7dee1f2","title":"git add -i","style":{"background-color":"#ccffcc"},"children":[],"parent":"1481d6b351fc"}],"parent":"4357b8744f1c"}],"parent":"root","collapsed":true},{"id":"3f45e5a4f062","title":"最佳实践","style":{"background-color":"#ff99cc"},"children":[{"id":"a5b2bbc53021","title":"主分支&nbsp;master","parent":"3f45e5a4f062","children":[{"id":"d3ace8ff54d5","title":"代码库应该有一个、且仅有一个主分支。<br>所有提供给用户使用的正式版本，都在这个主分支上发布。","children":[],"parent":"a5b2bbc53021"},{"id":"7171d1551ef9","title":"默认主分支master&nbsp;只用作发布分支，不可以在其上面开发","children":[],"parent":"a5b2bbc53021"},{"id":"432e689b1335","title":"Git主分支的名字，默认叫做Master。<br>它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。","parent":"a5b2bbc53021","children":[]}],"icons":[{"text":"&#xe67e","index":"28","color":"rgb(191, 30, 27)","name":"flag"}]},{"id":"2ce3c1548c2c","title":"开发分支dev (develop)","parent":"3f45e5a4f062","children":[{"id":"66bb9e3f3392","title":"主分支master只用来分布重大版本，日常开发应该在另一条分支上完成。","children":[],"parent":"2ce3c1548c2c"},{"id":"2668cf94d231","title":"dev是开发主分支，所有的特性，功能都从开分支上分出","children":[],"parent":"2ce3c1548c2c"},{"id":"58d0cc90725c","title":"这个分支可以用来生成代码的最新隔夜版本（nightly）。<br>如果想正式对外发布，就在Master分支上，对Develop分支进行\"合并\"（merge）。","parent":"2ce3c1548c2c","children":[]},{"id":"d57d0355ca9a","title":"使用--no-ff参数合并至master","parent":"2ce3c1548c2c","children":[{"id":"80315a988387","title":"# 切换到Master分支<br>git checkout master<br><br># 对Develop分支进行合并<br>git merge --no-ff dev","style":{"background-color":"#ff99cc"},"parent":"d57d0355ca9a","children":[],"icons":[]}]}],"icons":[{"text":"&#xe67e","index":"30","color":"rgb(48, 191, 191)","name":"flag"}]},{"id":"20051e068f32","title":"临时性分支","parent":"3f45e5a4f062","children":[{"id":"9ea495cdf92b","title":"master和develop。前者用于正式发布，后者用于日常开发。<br>其实，常设分支只需要这两条就够了，不需要其他了。","children":[],"parent":"20051e068f32"},{"id":"1fc41ba86fe8","title":"但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。","parent":"20051e068f32","children":[]},{"id":"48e59ed5c902","title":"临时性分支主要有","parent":"20051e068f32","children":[{"id":"5d1e21ee529d","title":"功能（feature）分支","parent":"48e59ed5c902","children":[]},{"id":"b281ae84b9ef","title":"预发布（release）分支","parent":"48e59ed5c902","children":[]},{"id":"ff403d4199f3","title":"修补bug（fixbug）分支","parent":"48e59ed5c902","children":[]}]},{"id":"fac923cfa548","title":"这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Develop。","parent":"20051e068f32","children":[]}],"icons":[{"text":"&#xe67e","index":"26","color":"rgb(68, 68, 68)","name":"flag"}]},{"id":"b9d3384b4083","title":"功能分支","style":{"background-color":"#55beed"},"children":[{"id":"b073cde94402","title":"第一种是功能分支，它是为了开发某种特定功能，从Develop分支上面分出来的。<br>开发完成后，要再并入Develop。","children":[{"id":"46c2c9cbb1e6","title":"","image":{"w":102,"h":185,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a70a6e4b0615ac04f7562?e=1517977270&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:pZVHITIvq5wZlPW3Lh5ES012Giw="},"children":[],"parent":"b073cde94402"}],"parent":"b9d3384b4083"},{"id":"1463769d373f","title":"功能分支的名字，可以采用feature-*的形式命名。","parent":"b9d3384b4083","children":[{"id":"3971a8075f38","title":"git checkout -b feature-x dev","style":{"background-color":"#ccffcc"},"parent":"1463769d373f","children":[]}],"icons":[{"text":"&#xe67a","index":"0","name":"priority"}]},{"id":"ae4c3ccadda0","title":"开发完成后，将功能分支合并到dev分支：","children":[{"id":"6bf3f661e540","title":"git checkout dev<br>git merge --no-ff feature-x","style":{"background-color":"#ccffcc"},"children":[],"parent":"ae4c3ccadda0"}],"parent":"b9d3384b4083","icons":[{"text":"&#xe625","index":"1","name":"priority"}]},{"id":"5113a067fa66","title":"删除feature分支：","parent":"b9d3384b4083","children":[{"id":"97e81efcfa64","title":"git branch -d feature-x","style":{"background-color":"#ccffcc"},"parent":"5113a067fa66","children":[]}],"icons":[{"text":"&#xe62a","index":"2","name":"priority"}]}],"parent":"3f45e5a4f062","icons":[{"text":"&#xe693","index":"52","name":""}]},{"id":"b5fb72383665","title":"预发布分支","style":{"background-color":"#ccffcc"},"children":[{"id":"b4a8d0168eef","title":"第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），<br>我们可能需要有一个预发布的版本进行测试。","children":[],"parent":"b5fb72383665"},{"id":"0b625b6fd6c8","title":"预发布分支是从dev分支上面分出来的，<br>预发布结束以后，必须合并进dev和master分支。<br>它的命名，可以采用release-*的形式。","children":[],"parent":"b5fb72383665"},{"id":"ac240efb4c5e","title":"创建一个预发布分支：","children":[{"id":"9346d321d9e0","title":"git checkout -b release-1.2 dev","style":{"background-color":"#ccffcc"},"children":[],"parent":"ac240efb4c5e"}],"parent":"b5fb72383665","icons":[{"text":"&#xe67a","index":"0","name":"priority"}]},{"id":"e30b3085b5b7","title":"确认没有问题后，合并到master分支：","parent":"b5fb72383665","children":[{"id":"3d17e01e0ac7","title":"git checkout master<br>git merge --no-ff release-1.2<br># 对合并生成的新节点，做一个标签<br>git tag -a 1.2","style":{"background-color":"#ccffcc"},"parent":"e30b3085b5b7","children":[]}],"icons":[{"text":"&#xe625","index":"1","name":"priority"}]},{"id":"1675700eb570","title":"再合并到dev分支：","parent":"b5fb72383665","children":[{"id":"ccddab76ab1b","title":"git checkout dev<br>git merge --no-ff release-1.2","style":{"background-color":"#ccffcc"},"children":[],"parent":"1675700eb570"}],"icons":[{"text":"&#xe62a","index":"2","name":"priority"}]},{"id":"22e209fd0bc6","title":"最后，删除预发布分支：","children":[{"id":"6b4e1cd9d4e6","title":"git branch -d release-1.2","style":{"background-color":"#ccffcc"},"children":[],"parent":"22e209fd0bc6"}],"parent":"b5fb72383665","icons":[{"text":"&#xe635","index":"3","name":"priority"}]}],"parent":"3f45e5a4f062","icons":[{"text":"&#xe693","index":"53","name":""}]},{"id":"d7f4f688b39f","title":"修补bug分支","style":{"background-color":"#ffff99"},"parent":"3f45e5a4f062","children":[{"id":"69873326439d","title":"最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。","parent":"d7f4f688b39f","children":[]},{"id":"a08f001c51f0","title":"修补bug分支是从master分支上面分出来的。修补结束以后，再合并进master和develop分支。它的命名，可以采用fixbug-*的形式。","parent":"d7f4f688b39f","children":[]},{"id":"eee31d4bed4e","title":"图例","children":[{"id":"f8f7a6c49023","title":"","image":{"w":208,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a746ce4b0615ac04f84fc?e=1517978236&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:hX0cPkP2ZesRBDSJ3L6NPr-sXeI=","h":178},"children":[],"parent":"eee31d4bed4e"}],"parent":"d7f4f688b39f"},{"id":"0f9538e53ee9","title":"创建一个修补bug分支：","parent":"d7f4f688b39f","children":[{"id":"44c321e5cddc","title":"git checkout -b fixbug-0.1 master","style":{"background-color":"#ccffcc"},"parent":"0f9538e53ee9","children":[]}],"icons":[{"text":"&#xe67a","index":"0","name":"priority"}]},{"id":"d82bb5c81643","title":"修补结束后，合并到master分支：","parent":"d7f4f688b39f","children":[{"id":"d5c3b686eade","title":"git checkout master<br>git merge --no-ff fixbug-0.1<br>git tag -a 0.1.1","style":{"background-color":"#ccffcc"},"parent":"d82bb5c81643","children":[]}],"icons":[{"text":"&#xe625","index":"1","name":"priority"}]},{"id":"b3b08750b51f","title":"再合并到dev分支：","children":[{"id":"b70952f20625","title":"git checkout dev<br>git merge --no-ff fixbug-0.1","style":{"background-color":"#ccffcc"},"children":[],"parent":"b3b08750b51f"}],"parent":"d7f4f688b39f","icons":[{"text":"&#xe62a","index":"2","name":"priority"}]},{"id":"c7f19c4af031","title":"最后，删除\"修补bug分支\"：","parent":"d7f4f688b39f","children":[{"id":"97f6e4ab3dcc","title":"git branch -d fixbug-0.1","style":{"background-color":"#ccffcc"},"parent":"c7f19c4af031","children":[]}],"icons":[{"text":"&#xe635","index":"3","name":"priority"}]}],"icons":[{"text":"&#xe693","index":"42","name":""}]},{"id":"6dfeb944881f","title":"图例","children":[{"id":"e1afe536af81","title":"","image":{"w":611,"url":"http://7xt9nt.com1.z0.glb.clouddn.com/5a7a75dee4b024b99bf352f6?e=1517978607&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:3mJbaD3dn_8G2ScDgCGAKEY1SZc=","h":815},"children":[],"parent":"6dfeb944881f"}],"parent":"3f45e5a4f062","collapsed":true}],"parent":"root","icons":[{"text":"&#xe693","index":"57","name":""},{"text":"&#xe693","index":"38","name":""}]}]}},"meta":{"id":"5a796b8ae4b0615ac04e53cc","member":"55506759e4b09739f462d50e","exportTime":"2018-02-07 13:22:02","diagramInfo":{"category":"mind_free","title":"git - 简明指南","created":"2018-02-06 16:47:06","creator":"55506759e4b09739f462d50e","modified":"2018-02-07 13:22:00"},"type":"ProcessOn Schema File","version":"1.0"}}